<?php

/*
 * AES Properties
 */

define('AES_CIPHERMODE_PID', 1);
define('AES_INPUTFILE_PID', 2);
define('AES_INPUTMESSAGE_PID', 3);
define('AES_IV_PID', 4);
define('AES_KEY_PID', 5);
define('AES_KEYPASSWORD_PID', 6);
define('AES_OUTPUTFILE_PID', 7);
define('AES_OUTPUTMESSAGE_PID', 8);
define('AES_OVERWRITE_PID', 9);
define('AES_PADDINGMODE_PID', 10);
define('AES_USEHEX_PID', 11);


/*
 * AES Enums
 */

define('AES_CIPHERMODE_CBC', 0);
define('AES_CIPHERMODE_ECB', 1);
define('AES_CIPHERMODE_OFB', 2);
define('AES_CIPHERMODE_CFB', 3);
define('AES_CIPHERMODE_CTS', 4);
define('AES_CIPHERMODE_8OFB', 5);
define('AES_CIPHERMODE_GCM', 6);

define('AES_PADDINGMODE_PKCS7', 0);
define('AES_PADDINGMODE_ZEROS', 1);
define('AES_PADDINGMODE_NONE', 2);
define('AES_PADDINGMODE_ANSIX923', 3);
define('AES_PADDINGMODE_ISO10126', 4);



/*
 * AES Methods
 */

define('AES_CONFIG_MID', 2);
define('AES_DECRYPT_MID', 3);
define('AES_DECRYPTBLOCK_MID', 4);
define('AES_ENCRYPT_MID', 5);
define('AES_ENCRYPTBLOCK_MID', 6);
define('AES_RESET_MID', 7);


/*
 * AES Events
 */
  
define('AES_ERROR_EID', 1);
define('AES_PROGRESS_EID', 2);

/*
 * Blowfish Properties
 */

define('BLOWFISH_CIPHERMODE_PID', 1);
define('BLOWFISH_INPUTFILE_PID', 2);
define('BLOWFISH_INPUTMESSAGE_PID', 3);
define('BLOWFISH_IV_PID', 4);
define('BLOWFISH_KEY_PID', 5);
define('BLOWFISH_KEYPASSWORD_PID', 6);
define('BLOWFISH_OUTPUTFILE_PID', 7);
define('BLOWFISH_OUTPUTMESSAGE_PID', 8);
define('BLOWFISH_OVERWRITE_PID', 9);
define('BLOWFISH_PADDINGMODE_PID', 10);
define('BLOWFISH_USEHEX_PID', 11);


/*
 * Blowfish Enums
 */

define('BLOWFISH_CIPHERMODE_CBC', 0);
define('BLOWFISH_CIPHERMODE_ECB', 1);
define('BLOWFISH_CIPHERMODE_OFB', 2);
define('BLOWFISH_CIPHERMODE_CFB', 3);
define('BLOWFISH_CIPHERMODE_CTS', 4);
define('BLOWFISH_CIPHERMODE_8OFB', 5);

define('BLOWFISH_PADDINGMODE_PKCS7', 0);
define('BLOWFISH_PADDINGMODE_ZEROS', 1);
define('BLOWFISH_PADDINGMODE_NONE', 2);
define('BLOWFISH_PADDINGMODE_ANSIX923', 3);
define('BLOWFISH_PADDINGMODE_ISO10126', 4);



/*
 * Blowfish Methods
 */

define('BLOWFISH_CONFIG_MID', 2);
define('BLOWFISH_DECRYPT_MID', 3);
define('BLOWFISH_DECRYPTBLOCK_MID', 4);
define('BLOWFISH_ENCRYPT_MID', 5);
define('BLOWFISH_ENCRYPTBLOCK_MID', 6);
define('BLOWFISH_RESET_MID', 7);


/*
 * Blowfish Events
 */
  
define('BLOWFISH_ERROR_EID', 1);
define('BLOWFISH_PROGRESS_EID', 2);

/*
 * CAST Properties
 */

define('CAST_CIPHERMODE_PID', 1);
define('CAST_INPUTFILE_PID', 2);
define('CAST_INPUTMESSAGE_PID', 3);
define('CAST_IV_PID', 4);
define('CAST_KEY_PID', 5);
define('CAST_KEYPASSWORD_PID', 6);
define('CAST_OUTPUTFILE_PID', 7);
define('CAST_OUTPUTMESSAGE_PID', 8);
define('CAST_OVERWRITE_PID', 9);
define('CAST_PADDINGMODE_PID', 10);
define('CAST_USEHEX_PID', 11);


/*
 * CAST Enums
 */

define('CAST_CIPHERMODE_CBC', 0);
define('CAST_CIPHERMODE_ECB', 1);
define('CAST_CIPHERMODE_OFB', 2);
define('CAST_CIPHERMODE_CFB', 3);
define('CAST_CIPHERMODE_CTS', 4);
define('CAST_CIPHERMODE_8OFB', 5);

define('CAST_PADDINGMODE_PKCS7', 0);
define('CAST_PADDINGMODE_ZEROS', 1);
define('CAST_PADDINGMODE_NONE', 2);
define('CAST_PADDINGMODE_ANSIX923', 3);
define('CAST_PADDINGMODE_ISO10126', 4);



/*
 * CAST Methods
 */

define('CAST_CONFIG_MID', 2);
define('CAST_DECRYPT_MID', 3);
define('CAST_DECRYPTBLOCK_MID', 4);
define('CAST_ENCRYPT_MID', 5);
define('CAST_ENCRYPTBLOCK_MID', 6);
define('CAST_RESET_MID', 7);


/*
 * CAST Events
 */
  
define('CAST_ERROR_EID', 1);
define('CAST_PROGRESS_EID', 2);

/*
 * CertMgr Properties
 */

define('CERTMGR_CERTEFFECTIVEDATE_PID', 1);
define('CERTMGR_CERTENCODED_PID', 2);
define('CERTMGR_CERTEXPIRATIONDATE_PID', 3);
define('CERTMGR_CERTEXTENDEDKEYUSAGE_PID', 4);
define('CERTMGR_CERTFINGERPRINT_PID', 5);
define('CERTMGR_CERTISSUER_PID', 6);
define('CERTMGR_CERTKEYPASSWORD_PID', 7);
define('CERTMGR_CERTPRIVATEKEY_PID', 8);
define('CERTMGR_CERTPRIVATEKEYAVAILABLE_PID', 9);
define('CERTMGR_CERTPRIVATEKEYCONTAINER_PID', 10);
define('CERTMGR_CERTPUBLICKEY_PID', 11);
define('CERTMGR_CERTPUBLICKEYALGORITHM_PID', 12);
define('CERTMGR_CERTPUBLICKEYLENGTH_PID', 13);
define('CERTMGR_CERTSERIALNUMBER_PID', 14);
define('CERTMGR_CERTSIGNATUREALGORITHM_PID', 15);
define('CERTMGR_CERTSUBJECT_PID', 16);
define('CERTMGR_CERTSUBJECTALTNAMES_PID', 17);
define('CERTMGR_CERTTHUMBPRINTMD5_PID', 18);
define('CERTMGR_CERTTHUMBPRINTSHA1_PID', 19);
define('CERTMGR_CERTUSAGE_PID', 20);
define('CERTMGR_CERTUSAGEFLAGS_PID', 21);
define('CERTMGR_CERTVERSION_PID', 22);
define('CERTMGR_CERTEXTENSIONCOUNT_PID', 23);
define('CERTMGR_CERTEXTENSIONCRITICAL_PID', 24);
define('CERTMGR_CERTEXTENSIONOID_PID', 25);
define('CERTMGR_CERTEXTENSIONVALUE_PID', 26);
define('CERTMGR_CERTSTORE_PID', 27);
define('CERTMGR_CERTSTOREPASSWORD_PID', 28);
define('CERTMGR_CERTSTORETYPE_PID', 29);


/*
 * CertMgr Enums
 */

define('CERTMGR_CERTSTORETYPE_USER', 0);
define('CERTMGR_CERTSTORETYPE_MACHINE', 1);
define('CERTMGR_CERTSTORETYPE_PFXFILE', 2);
define('CERTMGR_CERTSTORETYPE_PFXBLOB', 3);
define('CERTMGR_CERTSTORETYPE_JKSFILE', 4);
define('CERTMGR_CERTSTORETYPE_JKSBLOB', 5);
define('CERTMGR_CERTSTORETYPE_PEMKEY_FILE', 6);
define('CERTMGR_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('CERTMGR_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('CERTMGR_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('CERTMGR_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('CERTMGR_CERTSTORETYPE_P7BFILE', 11);
define('CERTMGR_CERTSTORETYPE_P7BBLOB', 12);
define('CERTMGR_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('CERTMGR_CERTSTORETYPE_PPKFILE', 14);
define('CERTMGR_CERTSTORETYPE_PPKBLOB', 15);
define('CERTMGR_CERTSTORETYPE_XMLFILE', 16);
define('CERTMGR_CERTSTORETYPE_XMLBLOB', 17);



/*
 * CertMgr Methods
 */

define('CERTMGR_CONFIG_MID', 2);
define('CERTMGR_CREATECERTIFICATE_MID', 3);
define('CERTMGR_CREATEKEY_MID', 4);
define('CERTMGR_DELETECERTIFICATE_MID', 5);
define('CERTMGR_DELETEKEY_MID', 6);
define('CERTMGR_EXPORTCERTIFICATE_MID', 7);
define('CERTMGR_GENERATECSR_MID', 8);
define('CERTMGR_IMPORTCERTIFICATE_MID', 9);
define('CERTMGR_IMPORTSIGNEDCSR_MID', 10);
define('CERTMGR_ISSUECERTIFICATE_MID', 11);
define('CERTMGR_LISTCERTIFICATESTORES_MID', 12);
define('CERTMGR_LISTKEYS_MID', 13);
define('CERTMGR_LISTMACHINESTORES_MID', 14);
define('CERTMGR_LISTSTORECERTIFICATES_MID', 15);
define('CERTMGR_READCERTIFICATE_MID', 16);
define('CERTMGR_RESET_MID', 17);
define('CERTMGR_SAVECERTIFICATE_MID', 18);
define('CERTMGR_SHOWCERTIFICATECHAIN_MID', 19);
define('CERTMGR_SIGNCSR_MID', 20);


/*
 * CertMgr Events
 */
  
define('CERTMGR_CERTCHAIN_EID', 1);
define('CERTMGR_CERTLIST_EID', 2);
define('CERTMGR_ERROR_EID', 3);
define('CERTMGR_KEYLIST_EID', 4);
define('CERTMGR_STORELIST_EID', 5);

/*
 * DES Properties
 */

define('DES_CIPHERMODE_PID', 1);
define('DES_INPUTFILE_PID', 2);
define('DES_INPUTMESSAGE_PID', 3);
define('DES_IV_PID', 4);
define('DES_KEY_PID', 5);
define('DES_KEYPASSWORD_PID', 6);
define('DES_OUTPUTFILE_PID', 7);
define('DES_OUTPUTMESSAGE_PID', 8);
define('DES_OVERWRITE_PID', 9);
define('DES_PADDINGMODE_PID', 10);
define('DES_USEHEX_PID', 11);


/*
 * DES Enums
 */

define('DES_CIPHERMODE_CBC', 0);
define('DES_CIPHERMODE_ECB', 1);
define('DES_CIPHERMODE_OFB', 2);
define('DES_CIPHERMODE_CFB', 3);
define('DES_CIPHERMODE_CTS', 4);
define('DES_CIPHERMODE_8OFB', 5);

define('DES_PADDINGMODE_PKCS7', 0);
define('DES_PADDINGMODE_ZEROS', 1);
define('DES_PADDINGMODE_NONE', 2);
define('DES_PADDINGMODE_ANSIX923', 3);
define('DES_PADDINGMODE_ISO10126', 4);



/*
 * DES Methods
 */

define('DES_CONFIG_MID', 2);
define('DES_DECRYPT_MID', 3);
define('DES_DECRYPTBLOCK_MID', 4);
define('DES_ENCRYPT_MID', 5);
define('DES_ENCRYPTBLOCK_MID', 6);
define('DES_RESET_MID', 7);


/*
 * DES Events
 */
  
define('DES_ERROR_EID', 1);
define('DES_PROGRESS_EID', 2);

/*
 * DPAPI Properties
 */

define('DPAPI_DATADESCRIPTION_PID', 1);
define('DPAPI_INPUTFILE_PID', 2);
define('DPAPI_INPUTMESSAGE_PID', 3);
define('DPAPI_OUTPUTFILE_PID', 4);
define('DPAPI_OUTPUTMESSAGE_PID', 5);
define('DPAPI_OVERWRITE_PID', 6);
define('DPAPI_PASSWORD_PID', 7);
define('DPAPI_PROMPTTITLE_PID', 8);
define('DPAPI_PROMPTUSER_PID', 9);


/*
 * DPAPI Enums
 */



/*
 * DPAPI Methods
 */

define('DPAPI_CONFIG_MID', 2);
define('DPAPI_PROTECT_MID', 3);
define('DPAPI_RESET_MID', 4);
define('DPAPI_UNPROTECT_MID', 7);


/*
 * DPAPI Events
 */
  
define('DPAPI_ERROR_EID', 1);
define('DPAPI_PROGRESS_EID', 2);

/*
 * DSA Properties
 */

define('DSA_CERTENCODED_PID', 1);
define('DSA_CERTSTORE_PID', 2);
define('DSA_CERTSTOREPASSWORD_PID', 3);
define('DSA_CERTSTORETYPE_PID', 4);
define('DSA_CERTSUBJECT_PID', 5);
define('DSA_HASHALGORITHM_PID', 6);
define('DSA_HASHSIGNATURE_PID', 7);
define('DSA_HASHVALUE_PID', 8);
define('DSA_INPUTFILE_PID', 9);
define('DSA_INPUTMESSAGE_PID', 10);
define('DSA_KEYG_PID', 11);
define('DSA_KEYP_PID', 12);
define('DSA_KEYPRIVATEKEY_PID', 13);
define('DSA_KEYPUBLICKEY_PID', 14);
define('DSA_KEYQ_PID', 15);
define('DSA_KEYX_PID', 16);
define('DSA_KEYY_PID', 17);
define('DSA_SIGNERCERTENCODED_PID', 18);
define('DSA_SIGNERCERTSTORE_PID', 19);
define('DSA_SIGNERCERTSTOREPASSWORD_PID', 20);
define('DSA_SIGNERCERTSTORETYPE_PID', 21);
define('DSA_SIGNERCERTSUBJECT_PID', 22);
define('DSA_SIGNERKEYG_PID', 23);
define('DSA_SIGNERKEYP_PID', 24);
define('DSA_SIGNERKEYPUBLICKEY_PID', 25);
define('DSA_SIGNERKEYQ_PID', 26);
define('DSA_SIGNERKEYY_PID', 27);
define('DSA_USEHEX_PID', 28);


/*
 * DSA Enums
 */

define('DSA_CERTSTORETYPE_USER', 0);
define('DSA_CERTSTORETYPE_MACHINE', 1);
define('DSA_CERTSTORETYPE_PFXFILE', 2);
define('DSA_CERTSTORETYPE_PFXBLOB', 3);
define('DSA_CERTSTORETYPE_JKSFILE', 4);
define('DSA_CERTSTORETYPE_JKSBLOB', 5);
define('DSA_CERTSTORETYPE_PEMKEY_FILE', 6);
define('DSA_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('DSA_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('DSA_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('DSA_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('DSA_CERTSTORETYPE_P7BFILE', 11);
define('DSA_CERTSTORETYPE_P7BBLOB', 12);
define('DSA_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('DSA_CERTSTORETYPE_PPKFILE', 14);
define('DSA_CERTSTORETYPE_PPKBLOB', 15);
define('DSA_CERTSTORETYPE_XMLFILE', 16);
define('DSA_CERTSTORETYPE_XMLBLOB', 17);

define('DSA_HASHALGORITHM_SHA1', 0);
define('DSA_HASHALGORITHM_SHA224', 1);
define('DSA_HASHALGORITHM_SHA256', 2);
define('DSA_HASHALGORITHM_SHA384', 3);
define('DSA_HASHALGORITHM_SHA512', 4);
define('DSA_HASHALGORITHM_RIPEMD160', 5);

define('DSA_SIGNERCERTSTORETYPE_USER', 0);
define('DSA_SIGNERCERTSTORETYPE_MACHINE', 1);
define('DSA_SIGNERCERTSTORETYPE_PFXFILE', 2);
define('DSA_SIGNERCERTSTORETYPE_PFXBLOB', 3);
define('DSA_SIGNERCERTSTORETYPE_JKSFILE', 4);
define('DSA_SIGNERCERTSTORETYPE_JKSBLOB', 5);
define('DSA_SIGNERCERTSTORETYPE_PEMKEY_FILE', 6);
define('DSA_SIGNERCERTSTORETYPE_PEMKEY_BLOB', 7);
define('DSA_SIGNERCERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('DSA_SIGNERCERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('DSA_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('DSA_SIGNERCERTSTORETYPE_P7BFILE', 11);
define('DSA_SIGNERCERTSTORETYPE_P7BBLOB', 12);
define('DSA_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('DSA_SIGNERCERTSTORETYPE_PPKFILE', 14);
define('DSA_SIGNERCERTSTORETYPE_PPKBLOB', 15);
define('DSA_SIGNERCERTSTORETYPE_XMLFILE', 16);
define('DSA_SIGNERCERTSTORETYPE_XMLBLOB', 17);



/*
 * DSA Methods
 */

define('DSA_CONFIG_MID', 2);
define('DSA_CREATEKEY_MID', 3);
define('DSA_RESET_MID', 4);
define('DSA_SIGN_MID', 6);
define('DSA_VERIFYSIGNATURE_MID', 7);


/*
 * DSA Events
 */
  
define('DSA_ERROR_EID', 1);
define('DSA_PROGRESS_EID', 2);

/*
 * ECC Properties
 */

define('ECC_HASHALGORITHM_PID', 1);
define('ECC_HASHSIGNATURE_PID', 2);
define('ECC_HASHVALUE_PID', 3);
define('ECC_INPUTFILE_PID', 4);
define('ECC_INPUTMESSAGE_PID', 5);
define('ECC_KEYCURVE_PID', 6);
define('ECC_KEYK_PID', 7);
define('ECC_KEYPRIVATEKEY_PID', 8);
define('ECC_KEYPUBLICKEY_PID', 9);
define('ECC_KEYRX_PID', 10);
define('ECC_KEYRY_PID', 11);
define('ECC_KEYDERIVATIONFUNCTION_PID', 12);
define('ECC_RECIPIENTKEYCURVE_PID', 13);
define('ECC_RECIPIENTKEYPUBLICKEY_PID', 14);
define('ECC_RECIPIENTKEYRX_PID', 15);
define('ECC_RECIPIENTKEYRY_PID', 16);
define('ECC_SHAREDSECRET_PID', 17);
define('ECC_SIGNERKEYCURVE_PID', 18);
define('ECC_SIGNERKEYPUBLICKEY_PID', 19);
define('ECC_SIGNERKEYRX_PID', 20);
define('ECC_SIGNERKEYRY_PID', 21);
define('ECC_USEHEX_PID', 22);


/*
 * ECC Enums
 */

define('ECC_HASHALGORITHM_SHA1', 0);
define('ECC_HASHALGORITHM_SHA224', 1);
define('ECC_HASHALGORITHM_SHA256', 2);
define('ECC_HASHALGORITHM_SHA384', 3);
define('ECC_HASHALGORITHM_SHA512', 4);
define('ECC_HASHALGORITHM_MD2', 5);
define('ECC_HASHALGORITHM_MD4', 6);
define('ECC_HASHALGORITHM_MD5', 7);
define('ECC_HASHALGORITHM_MD5SHA1', 8);
define('ECC_HASHALGORITHM_RIPEMD160', 9);

define('ECC_KEYCURVE_256R_1', 0);
define('ECC_KEYCURVE_384R_1', 1);
define('ECC_KEYCURVE_521R_1', 2);

define('ECC_KEYDERIVATIONFUNCTION_SHA1', 0);
define('ECC_KEYDERIVATIONFUNCTION_SHA256', 1);
define('ECC_KEYDERIVATIONFUNCTION_SHA384', 2);
define('ECC_KEYDERIVATIONFUNCTION_SHA512', 3);
define('ECC_KEYDERIVATIONFUNCTION_MD2', 4);
define('ECC_KEYDERIVATIONFUNCTION_MD4', 5);
define('ECC_KEYDERIVATIONFUNCTION_MD5', 6);
define('ECC_KEYDERIVATIONFUNCTION_HMACSHA1', 7);
define('ECC_KEYDERIVATIONFUNCTION_HMACSHA256', 8);
define('ECC_KEYDERIVATIONFUNCTION_HMACSHA384', 9);
define('ECC_KEYDERIVATIONFUNCTION_HMACSHA512', 10);
define('ECC_KEYDERIVATIONFUNCTION_HMACMD5', 11);
define('ECC_KEYDERIVATIONFUNCTION_TLS', 12);

define('ECC_RECIPIENTKEYCURVE_256R_1', 0);
define('ECC_RECIPIENTKEYCURVE_384R_1', 1);
define('ECC_RECIPIENTKEYCURVE_521R_1', 2);

define('ECC_SIGNERKEYCURVE_256R_1', 0);
define('ECC_SIGNERKEYCURVE_384R_1', 1);
define('ECC_SIGNERKEYCURVE_521R_1', 2);



/*
 * ECC Methods
 */

define('ECC_COMPUTESECRET_MID', 2);
define('ECC_CONFIG_MID', 3);
define('ECC_CREATEKEY_MID', 4);
define('ECC_RESET_MID', 5);
define('ECC_SIGN_MID', 7);
define('ECC_VERIFYSIGNATURE_MID', 8);


/*
 * ECC Events
 */
  
define('ECC_ERROR_EID', 1);
define('ECC_PROGRESS_EID', 2);

/*
 * Elgamal Properties
 */

define('ELGAMAL_INPUTFILE_PID', 1);
define('ELGAMAL_INPUTMESSAGE_PID', 2);
define('ELGAMAL_KEYG_PID', 3);
define('ELGAMAL_KEYP_PID', 4);
define('ELGAMAL_KEYPRIVATEKEY_PID', 5);
define('ELGAMAL_KEYPUBLICKEY_PID', 6);
define('ELGAMAL_KEYX_PID', 7);
define('ELGAMAL_KEYY_PID', 8);
define('ELGAMAL_OUTPUTFILE_PID', 9);
define('ELGAMAL_OUTPUTMESSAGE_PID', 10);
define('ELGAMAL_OVERWRITE_PID', 11);
define('ELGAMAL_RECIPIENTKEYG_PID', 12);
define('ELGAMAL_RECIPIENTKEYP_PID', 13);
define('ELGAMAL_RECIPIENTKEYPUBLICKEY_PID', 14);
define('ELGAMAL_RECIPIENTKEYY_PID', 15);
define('ELGAMAL_USEHEX_PID', 16);


/*
 * Elgamal Enums
 */



/*
 * Elgamal Methods
 */

define('ELGAMAL_CONFIG_MID', 2);
define('ELGAMAL_CREATEKEY_MID', 3);
define('ELGAMAL_DECRYPT_MID', 4);
define('ELGAMAL_ENCRYPT_MID', 5);
define('ELGAMAL_RESET_MID', 6);


/*
 * Elgamal Events
 */
  
define('ELGAMAL_ERROR_EID', 1);

/*
 * EzCrypt Properties
 */

define('EZCRYPT_ALGORITHM_PID', 1);
define('EZCRYPT_CIPHERMODE_PID', 2);
define('EZCRYPT_INPUTFILE_PID', 3);
define('EZCRYPT_INPUTMESSAGE_PID', 4);
define('EZCRYPT_IV_PID', 5);
define('EZCRYPT_KEY_PID', 6);
define('EZCRYPT_KEYPASSWORD_PID', 7);
define('EZCRYPT_OUTPUTFILE_PID', 8);
define('EZCRYPT_OUTPUTMESSAGE_PID', 9);
define('EZCRYPT_OVERWRITE_PID', 10);
define('EZCRYPT_PADDINGMODE_PID', 11);
define('EZCRYPT_USEHEX_PID', 12);


/*
 * EzCrypt Enums
 */

define('EZCRYPT_ALGORITHM_AES', 0);
define('EZCRYPT_ALGORITHM_BLOWFISH', 1);
define('EZCRYPT_ALGORITHM_CAST', 2);
define('EZCRYPT_ALGORITHM_DES', 3);
define('EZCRYPT_ALGORITHM_IDEA', 4);
define('EZCRYPT_ALGORITHM_RC2', 5);
define('EZCRYPT_ALGORITHM_RC4', 6);
define('EZCRYPT_ALGORITHM_TEA', 7);
define('EZCRYPT_ALGORITHM_TRIPLE_DES', 8);
define('EZCRYPT_ALGORITHM_TWOFISH', 9);

define('EZCRYPT_CIPHERMODE_CBC', 0);
define('EZCRYPT_CIPHERMODE_ECB', 1);
define('EZCRYPT_CIPHERMODE_OFB', 2);
define('EZCRYPT_CIPHERMODE_CFB', 3);
define('EZCRYPT_CIPHERMODE_CTS', 4);
define('EZCRYPT_CIPHERMODE_8OFB', 5);

define('EZCRYPT_PADDINGMODE_PKCS7', 0);
define('EZCRYPT_PADDINGMODE_ZEROS', 1);
define('EZCRYPT_PADDINGMODE_NONE', 2);
define('EZCRYPT_PADDINGMODE_ANSIX923', 3);
define('EZCRYPT_PADDINGMODE_ISO10126', 4);



/*
 * EzCrypt Methods
 */

define('EZCRYPT_CONFIG_MID', 2);
define('EZCRYPT_DECRYPT_MID', 3);
define('EZCRYPT_DECRYPTBLOCK_MID', 4);
define('EZCRYPT_ENCRYPT_MID', 5);
define('EZCRYPT_ENCRYPTBLOCK_MID', 6);
define('EZCRYPT_RESET_MID', 7);


/*
 * EzCrypt Events
 */
  
define('EZCRYPT_ERROR_EID', 1);
define('EZCRYPT_PROGRESS_EID', 2);

/*
 * EzRand Properties
 */

define('EZRAND_ALGORITHM_PID', 1);
define('EZRAND_MAX_PID', 2);
define('EZRAND_MIN_PID', 3);
define('EZRAND_RANDBYTES_PID', 4);
define('EZRAND_RANDBYTESLENGTH_PID', 5);
define('EZRAND_RANDINT_PID', 6);
define('EZRAND_SEED_PID', 7);


/*
 * EzRand Enums
 */

define('EZRAND_ALGORITHM_ISAAC', 0);
define('EZRAND_ALGORITHM_MSCRYPTO_API', 1);
define('EZRAND_ALGORITHM_PLATFORM', 2);
define('EZRAND_ALGORITHM_SECURE_PLATFORM', 3);
define('EZRAND_ALGORITHM_RC4RANDOM', 4);



/*
 * EzRand Methods
 */

define('EZRAND_CONFIG_MID', 2);
define('EZRAND_GETNEXTBYTES_MID', 3);
define('EZRAND_GETNEXTINT_MID', 4);
define('EZRAND_RESET_MID', 5);


/*
 * EzRand Events
 */
  
define('EZRAND_ERROR_EID', 1);

/*
 * Hash Properties
 */

define('HASH_ALGORITHM_PID', 1);
define('HASH_ENCODEHASH_PID', 2);
define('HASH_HASHVALUE_PID', 3);
define('HASH_INPUTFILE_PID', 4);
define('HASH_INPUTMESSAGE_PID', 5);
define('HASH_KEY_PID', 6);


/*
 * Hash Enums
 */

define('HASH_ALGORITHM_SHA1', 0);
define('HASH_ALGORITHM_SHA224', 1);
define('HASH_ALGORITHM_SHA256', 2);
define('HASH_ALGORITHM_SHA384', 3);
define('HASH_ALGORITHM_SHA512', 4);
define('HASH_ALGORITHM_MD2', 5);
define('HASH_ALGORITHM_MD4', 6);
define('HASH_ALGORITHM_MD5', 7);
define('HASH_ALGORITHM_RIPEMD160', 8);
define('HASH_ALGORITHM_MD5SHA1', 9);
define('HASH_ALGORITHM_HMACMD5', 10);
define('HASH_ALGORITHM_HMACSHA1', 11);
define('HASH_ALGORITHM_HMACSHA224', 12);
define('HASH_ALGORITHM_HMACSHA256', 13);
define('HASH_ALGORITHM_HMACSHA384', 14);
define('HASH_ALGORITHM_HMACSHA512', 15);
define('HASH_ALGORITHM_HMACRIPEMD160', 16);
define('HASH_ALGORITHM_SHA3_224', 17);
define('HASH_ALGORITHM_SHA3_256', 18);
define('HASH_ALGORITHM_SHA3_384', 19);
define('HASH_ALGORITHM_SHA3_512', 20);



/*
 * Hash Methods
 */

define('HASH_COMPUTEHASH_MID', 2);
define('HASH_CONFIG_MID', 3);
define('HASH_HASHBLOCK_MID', 4);
define('HASH_RESET_MID', 5);


/*
 * Hash Events
 */
  
define('HASH_ERROR_EID', 1);
define('HASH_PROGRESS_EID', 2);

/*
 * IDEA Properties
 */

define('IDEA_CIPHERMODE_PID', 1);
define('IDEA_INPUTFILE_PID', 2);
define('IDEA_INPUTMESSAGE_PID', 3);
define('IDEA_IV_PID', 4);
define('IDEA_KEY_PID', 5);
define('IDEA_KEYPASSWORD_PID', 6);
define('IDEA_OUTPUTFILE_PID', 7);
define('IDEA_OUTPUTMESSAGE_PID', 8);
define('IDEA_OVERWRITE_PID', 9);
define('IDEA_PADDINGMODE_PID', 10);
define('IDEA_USEHEX_PID', 11);


/*
 * IDEA Enums
 */

define('IDEA_CIPHERMODE_CBC', 0);
define('IDEA_CIPHERMODE_ECB', 1);
define('IDEA_CIPHERMODE_OFB', 2);
define('IDEA_CIPHERMODE_CFB', 3);
define('IDEA_CIPHERMODE_CTS', 4);
define('IDEA_CIPHERMODE_8OFB', 5);

define('IDEA_PADDINGMODE_PKCS7', 0);
define('IDEA_PADDINGMODE_ZEROS', 1);
define('IDEA_PADDINGMODE_NONE', 2);
define('IDEA_PADDINGMODE_ANSIX923', 3);
define('IDEA_PADDINGMODE_ISO10126', 4);



/*
 * IDEA Methods
 */

define('IDEA_CONFIG_MID', 2);
define('IDEA_DECRYPT_MID', 3);
define('IDEA_DECRYPTBLOCK_MID', 4);
define('IDEA_ENCRYPT_MID', 5);
define('IDEA_ENCRYPTBLOCK_MID', 6);
define('IDEA_RESET_MID', 7);


/*
 * IDEA Events
 */
  
define('IDEA_ERROR_EID', 1);
define('IDEA_PROGRESS_EID', 2);

/*
 * KeyMgr Properties
 */

define('KEYMGR_KEYEFFECTIVEDATE_PID', 1);
define('KEYMGR_KEYENCODED_PID', 2);
define('KEYMGR_KEYEXPIRATIONDATE_PID', 3);
define('KEYMGR_KEYFINGERPRINT_PID', 4);
define('KEYMGR_KEYID_PID', 5);
define('KEYMGR_KEYOTHERUSERIDS_PID', 6);
define('KEYMGR_KEYPASSPHRASE_PID', 7);
define('KEYMGR_KEYPUBLICKEY_PID', 8);
define('KEYMGR_KEYPUBLICKEYALGORITHM_PID', 9);
define('KEYMGR_KEYPUBLICKEYLENGTH_PID', 10);
define('KEYMGR_KEYREVOKED_PID', 11);
define('KEYMGR_KEYSECRETKEY_PID', 12);
define('KEYMGR_KEYSECRETKEYAVAILABLE_PID', 13);
define('KEYMGR_KEYUSAGE_PID', 14);
define('KEYMGR_KEYUSAGEFLAGS_PID', 15);
define('KEYMGR_KEYUSERID_PID', 16);
define('KEYMGR_KEYRING_PID', 17);


/*
 * KeyMgr Enums
 */



/*
 * KeyMgr Methods
 */

define('KEYMGR_ADDREVOKER_MID', 2);
define('KEYMGR_ADDUSERID_MID', 3);
define('KEYMGR_CHANGEEXPIRATIONDATE_MID', 4);
define('KEYMGR_CHANGEPASSPHRASE_MID', 5);
define('KEYMGR_CONFIG_MID', 6);
define('KEYMGR_CREATEKEY_MID', 7);
define('KEYMGR_DELETEKEY_MID', 8);
define('KEYMGR_EXPORTPUBLICKEY_MID', 9);
define('KEYMGR_EXPORTSECRETKEY_MID', 10);
define('KEYMGR_IMPORTKEY_MID', 11);
define('KEYMGR_IMPORTKEYB_MID', 12);
define('KEYMGR_LISTKEYS_MID', 13);
define('KEYMGR_LISTSIGNATURES_MID', 14);
define('KEYMGR_LISTSUBKEYS_MID', 15);
define('KEYMGR_LOADKEYRING_MID', 16);
define('KEYMGR_RESET_MID', 17);
define('KEYMGR_REVOKEKEY_MID', 18);
define('KEYMGR_SAVEKEYRING_MID', 19);
define('KEYMGR_SIGNUSERID_MID', 20);
define('KEYMGR_VERIFYPASSPHRASE_MID', 21);


/*
 * KeyMgr Events
 */
  
define('KEYMGR_ERROR_EID', 1);
define('KEYMGR_KEYLIST_EID', 2);
define('KEYMGR_KEYPASSPHRASE_EID', 3);
define('KEYMGR_SIGNATURELIST_EID', 4);
define('KEYMGR_STATUS_EID', 5);
define('KEYMGR_SUBKEYLIST_EID', 6);

/*
 * OneTimePassword Properties
 */

define('ONETIMEPASSWORD_COUNTER_PID', 1);
define('ONETIMEPASSWORD_PASSWORD_PID', 2);
define('ONETIMEPASSWORD_PASSWORDALGORITHM_PID', 3);
define('ONETIMEPASSWORD_SECRET_PID', 4);
define('ONETIMEPASSWORD_TIMESTEP_PID', 5);


/*
 * OneTimePassword Enums
 */

define('ONETIMEPASSWORD_PASSWORDALGORITHM_TOTP', 0);
define('ONETIMEPASSWORD_PASSWORDALGORITHM_HOTP', 1);



/*
 * OneTimePassword Methods
 */

define('ONETIMEPASSWORD_CONFIG_MID', 2);
define('ONETIMEPASSWORD_CREATEPASSWORD_MID', 3);
define('ONETIMEPASSWORD_RESET_MID', 4);
define('ONETIMEPASSWORD_VALIDATEPASSWORD_MID', 5);


/*
 * OneTimePassword Events
 */
  
define('ONETIMEPASSWORD_ERROR_EID', 1);

/*
 * OpenPGP Properties
 */

define('OPENPGP_ASCIIARMOR_PID', 1);
define('OPENPGP_CLEARSIGNATURE_PID', 2);
define('OPENPGP_COMPRESSIONMETHOD_PID', 3);
define('OPENPGP_DETACHEDSIGNATURE_PID', 4);
define('OPENPGP_ENCRYPTINGALGORITHM_PID', 5);
define('OPENPGP_INPUTFILE_PID', 6);
define('OPENPGP_INPUTMESSAGE_PID', 7);
define('OPENPGP_KEYCOUNT_PID', 8);
define('OPENPGP_KEYENCODED_PID', 9);
define('OPENPGP_KEYKEYRING_PID', 10);
define('OPENPGP_KEYPASSPHRASE_PID', 11);
define('OPENPGP_KEYUSERID_PID', 12);
define('OPENPGP_MESSAGEHEADERCOUNT_PID', 13);
define('OPENPGP_MESSAGEHEADERFIELD_PID', 14);
define('OPENPGP_MESSAGEHEADERVALUE_PID', 15);
define('OPENPGP_OUTPUTFILE_PID', 16);
define('OPENPGP_OUTPUTMESSAGE_PID', 17);
define('OPENPGP_OVERWRITE_PID', 18);
define('OPENPGP_RECIPIENTKEYCOUNT_PID', 19);
define('OPENPGP_RECIPIENTKEYENCODED_PID', 20);
define('OPENPGP_RECIPIENTKEYKEYRING_PID', 21);
define('OPENPGP_RECIPIENTKEYUSERID_PID', 22);
define('OPENPGP_SIGNERKEYCOUNT_PID', 23);
define('OPENPGP_SIGNERKEYENCODED_PID', 24);
define('OPENPGP_SIGNERKEYKEYRING_PID', 25);
define('OPENPGP_SIGNERKEYUSERID_PID', 26);
define('OPENPGP_SIGNINGALGORITHM_PID', 27);


/*
 * OpenPGP Enums
 */



/*
 * OpenPGP Methods
 */

define('OPENPGP_CONFIG_MID', 2);
define('OPENPGP_DECRYPT_MID', 3);
define('OPENPGP_DECRYPTANDVERIFYSIGNATURE_MID', 4);
define('OPENPGP_ENCRYPT_MID', 5);
define('OPENPGP_GETRECIPIENTINFO_MID', 6);
define('OPENPGP_RESET_MID', 7);
define('OPENPGP_SIGN_MID', 10);
define('OPENPGP_SIGNANDENCRYPT_MID', 11);
define('OPENPGP_VERIFYSIGNATURE_MID', 12);


/*
 * OpenPGP Events
 */
  
define('OPENPGP_ERROR_EID', 1);
define('OPENPGP_KEYPASSPHRASE_EID', 2);
define('OPENPGP_PROGRESS_EID', 3);
define('OPENPGP_RECIPIENTINFO_EID', 4);
define('OPENPGP_SIGNATUREINFO_EID', 5);
define('OPENPGP_STATUS_EID', 6);
define('OPENPGP_VERIFICATIONSTATUS_EID', 7);

/*
 * PBKDF Properties
 */

define('PBKDF_ALGORITHM_PID', 1);
define('PBKDF_ITERATIONS_PID', 2);
define('PBKDF_KEY_PID', 3);
define('PBKDF_KEYLENGTH_PID', 4);
define('PBKDF_PASSWORD_PID', 5);
define('PBKDF_SALT_PID', 6);
define('PBKDF_VERSION_PID', 7);


/*
 * PBKDF Enums
 */

define('PBKDF_ALGORITHM_HMACSHA1', 0);
define('PBKDF_ALGORITHM_HMACSHA224', 1);
define('PBKDF_ALGORITHM_HMACSHA256', 2);
define('PBKDF_ALGORITHM_HMACSHA384', 3);
define('PBKDF_ALGORITHM_HMACSHA512', 4);
define('PBKDF_ALGORITHM_HMACMD5', 5);
define('PBKDF_ALGORITHM_HMACRIPEMD160', 6);
define('PBKDF_ALGORITHM_SHA1', 7);
define('PBKDF_ALGORITHM_MD5', 8);
define('PBKDF_ALGORITHM_MD2', 9);

define('PBKDF_VERSION_PBKDF1', 0);
define('PBKDF_VERSION_PBKDF2', 1);



/*
 * PBKDF Methods
 */

define('PBKDF_CONFIG_MID', 2);
define('PBKDF_CREATEKEY_MID', 3);
define('PBKDF_RESET_MID', 4);


/*
 * PBKDF Events
 */
  
define('PBKDF_ERROR_EID', 1);

/*
 * RC2 Properties
 */

define('RC2_CIPHERMODE_PID', 1);
define('RC2_INPUTFILE_PID', 2);
define('RC2_INPUTMESSAGE_PID', 3);
define('RC2_IV_PID', 4);
define('RC2_KEY_PID', 5);
define('RC2_KEYPASSWORD_PID', 6);
define('RC2_OUTPUTFILE_PID', 7);
define('RC2_OUTPUTMESSAGE_PID', 8);
define('RC2_OVERWRITE_PID', 9);
define('RC2_PADDINGMODE_PID', 10);
define('RC2_USEHEX_PID', 11);


/*
 * RC2 Enums
 */

define('RC2_CIPHERMODE_CBC', 0);
define('RC2_CIPHERMODE_ECB', 1);
define('RC2_CIPHERMODE_OFB', 2);
define('RC2_CIPHERMODE_CFB', 3);
define('RC2_CIPHERMODE_CTS', 4);
define('RC2_CIPHERMODE_8OFB', 5);

define('RC2_PADDINGMODE_PKCS7', 0);
define('RC2_PADDINGMODE_ZEROS', 1);
define('RC2_PADDINGMODE_NONE', 2);
define('RC2_PADDINGMODE_ANSIX923', 3);
define('RC2_PADDINGMODE_ISO10126', 4);



/*
 * RC2 Methods
 */

define('RC2_CONFIG_MID', 2);
define('RC2_DECRYPT_MID', 3);
define('RC2_DECRYPTBLOCK_MID', 4);
define('RC2_ENCRYPT_MID', 5);
define('RC2_ENCRYPTBLOCK_MID', 6);
define('RC2_RESET_MID', 7);


/*
 * RC2 Events
 */
  
define('RC2_ERROR_EID', 1);
define('RC2_PROGRESS_EID', 2);

/*
 * RC4 Properties
 */

define('RC4_CIPHERMODE_PID', 1);
define('RC4_INPUTFILE_PID', 2);
define('RC4_INPUTMESSAGE_PID', 3);
define('RC4_IV_PID', 4);
define('RC4_KEY_PID', 5);
define('RC4_KEYPASSWORD_PID', 6);
define('RC4_OUTPUTFILE_PID', 7);
define('RC4_OUTPUTMESSAGE_PID', 8);
define('RC4_OVERWRITE_PID', 9);
define('RC4_PADDINGMODE_PID', 10);
define('RC4_USEHEX_PID', 11);


/*
 * RC4 Enums
 */

define('RC4_CIPHERMODE_CBC', 0);
define('RC4_CIPHERMODE_ECB', 1);
define('RC4_CIPHERMODE_OFB', 2);
define('RC4_CIPHERMODE_CFB', 3);
define('RC4_CIPHERMODE_CTS', 4);
define('RC4_CIPHERMODE_8OFB', 5);

define('RC4_PADDINGMODE_PKCS7', 0);
define('RC4_PADDINGMODE_ZEROS', 1);
define('RC4_PADDINGMODE_NONE', 2);
define('RC4_PADDINGMODE_ANSIX923', 3);
define('RC4_PADDINGMODE_ISO10126', 4);



/*
 * RC4 Methods
 */

define('RC4_CONFIG_MID', 2);
define('RC4_DECRYPT_MID', 3);
define('RC4_ENCRYPT_MID', 4);
define('RC4_RESET_MID', 5);


/*
 * RC4 Events
 */
  
define('RC4_ERROR_EID', 1);
define('RC4_PROGRESS_EID', 2);

/*
 * RSA Properties
 */

define('RSA_CERTENCODED_PID', 1);
define('RSA_CERTSTORE_PID', 2);
define('RSA_CERTSTOREPASSWORD_PID', 3);
define('RSA_CERTSTORETYPE_PID', 4);
define('RSA_CERTSUBJECT_PID', 5);
define('RSA_HASHALGORITHM_PID', 6);
define('RSA_HASHSIGNATURE_PID', 7);
define('RSA_HASHVALUE_PID', 8);
define('RSA_INPUTFILE_PID', 9);
define('RSA_INPUTMESSAGE_PID', 10);
define('RSA_KEYD_PID', 11);
define('RSA_KEYDP_PID', 12);
define('RSA_KEYDQ_PID', 13);
define('RSA_KEYEXPONENT_PID', 14);
define('RSA_KEYINVERSEQ_PID', 15);
define('RSA_KEYMODULUS_PID', 16);
define('RSA_KEYP_PID', 17);
define('RSA_KEYPRIVATEKEY_PID', 18);
define('RSA_KEYPUBLICKEY_PID', 19);
define('RSA_KEYQ_PID', 20);
define('RSA_OUTPUTFILE_PID', 21);
define('RSA_OUTPUTMESSAGE_PID', 22);
define('RSA_OVERWRITE_PID', 23);
define('RSA_RECIPIENTCERTENCODED_PID', 24);
define('RSA_RECIPIENTCERTSTORE_PID', 25);
define('RSA_RECIPIENTCERTSTOREPASSWORD_PID', 26);
define('RSA_RECIPIENTCERTSTORETYPE_PID', 27);
define('RSA_RECIPIENTCERTSUBJECT_PID', 28);
define('RSA_RECIPIENTKEYEXPONENT_PID', 29);
define('RSA_RECIPIENTKEYMODULUS_PID', 30);
define('RSA_RECIPIENTKEYPUBLICKEY_PID', 31);
define('RSA_SIGNERCERTENCODED_PID', 32);
define('RSA_SIGNERCERTSTORE_PID', 33);
define('RSA_SIGNERCERTSTOREPASSWORD_PID', 34);
define('RSA_SIGNERCERTSTORETYPE_PID', 35);
define('RSA_SIGNERCERTSUBJECT_PID', 36);
define('RSA_SIGNERKEYEXPONENT_PID', 37);
define('RSA_SIGNERKEYMODULUS_PID', 38);
define('RSA_SIGNERKEYPUBLICKEY_PID', 39);
define('RSA_USEHEX_PID', 40);


/*
 * RSA Enums
 */

define('RSA_CERTSTORETYPE_USER', 0);
define('RSA_CERTSTORETYPE_MACHINE', 1);
define('RSA_CERTSTORETYPE_PFXFILE', 2);
define('RSA_CERTSTORETYPE_PFXBLOB', 3);
define('RSA_CERTSTORETYPE_JKSFILE', 4);
define('RSA_CERTSTORETYPE_JKSBLOB', 5);
define('RSA_CERTSTORETYPE_PEMKEY_FILE', 6);
define('RSA_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('RSA_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('RSA_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('RSA_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('RSA_CERTSTORETYPE_P7BFILE', 11);
define('RSA_CERTSTORETYPE_P7BBLOB', 12);
define('RSA_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('RSA_CERTSTORETYPE_PPKFILE', 14);
define('RSA_CERTSTORETYPE_PPKBLOB', 15);
define('RSA_CERTSTORETYPE_XMLFILE', 16);
define('RSA_CERTSTORETYPE_XMLBLOB', 17);

define('RSA_HASHALGORITHM_SHA1', 0);
define('RSA_HASHALGORITHM_SHA224', 1);
define('RSA_HASHALGORITHM_SHA256', 2);
define('RSA_HASHALGORITHM_SHA384', 3);
define('RSA_HASHALGORITHM_SHA512', 4);
define('RSA_HASHALGORITHM_RIPEMD160', 5);
define('RSA_HASHALGORITHM_MD2', 6);
define('RSA_HASHALGORITHM_MD5', 7);
define('RSA_HASHALGORITHM_MD5SHA1', 8);

define('RSA_RECIPIENTCERTSTORETYPE_USER', 0);
define('RSA_RECIPIENTCERTSTORETYPE_MACHINE', 1);
define('RSA_RECIPIENTCERTSTORETYPE_PFXFILE', 2);
define('RSA_RECIPIENTCERTSTORETYPE_PFXBLOB', 3);
define('RSA_RECIPIENTCERTSTORETYPE_JKSFILE', 4);
define('RSA_RECIPIENTCERTSTORETYPE_JKSBLOB', 5);
define('RSA_RECIPIENTCERTSTORETYPE_PEMKEY_FILE', 6);
define('RSA_RECIPIENTCERTSTORETYPE_PEMKEY_BLOB', 7);
define('RSA_RECIPIENTCERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('RSA_RECIPIENTCERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('RSA_RECIPIENTCERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('RSA_RECIPIENTCERTSTORETYPE_P7BFILE', 11);
define('RSA_RECIPIENTCERTSTORETYPE_P7BBLOB', 12);
define('RSA_RECIPIENTCERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('RSA_RECIPIENTCERTSTORETYPE_PPKFILE', 14);
define('RSA_RECIPIENTCERTSTORETYPE_PPKBLOB', 15);
define('RSA_RECIPIENTCERTSTORETYPE_XMLFILE', 16);
define('RSA_RECIPIENTCERTSTORETYPE_XMLBLOB', 17);

define('RSA_SIGNERCERTSTORETYPE_USER', 0);
define('RSA_SIGNERCERTSTORETYPE_MACHINE', 1);
define('RSA_SIGNERCERTSTORETYPE_PFXFILE', 2);
define('RSA_SIGNERCERTSTORETYPE_PFXBLOB', 3);
define('RSA_SIGNERCERTSTORETYPE_JKSFILE', 4);
define('RSA_SIGNERCERTSTORETYPE_JKSBLOB', 5);
define('RSA_SIGNERCERTSTORETYPE_PEMKEY_FILE', 6);
define('RSA_SIGNERCERTSTORETYPE_PEMKEY_BLOB', 7);
define('RSA_SIGNERCERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('RSA_SIGNERCERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('RSA_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('RSA_SIGNERCERTSTORETYPE_P7BFILE', 11);
define('RSA_SIGNERCERTSTORETYPE_P7BBLOB', 12);
define('RSA_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('RSA_SIGNERCERTSTORETYPE_PPKFILE', 14);
define('RSA_SIGNERCERTSTORETYPE_PPKBLOB', 15);
define('RSA_SIGNERCERTSTORETYPE_XMLFILE', 16);
define('RSA_SIGNERCERTSTORETYPE_XMLBLOB', 17);



/*
 * RSA Methods
 */

define('RSA_CONFIG_MID', 2);
define('RSA_CREATEKEY_MID', 3);
define('RSA_DECRYPT_MID', 4);
define('RSA_ENCRYPT_MID', 5);
define('RSA_RESET_MID', 6);
define('RSA_SIGN_MID', 9);
define('RSA_VERIFYSIGNATURE_MID', 10);


/*
 * RSA Events
 */
  
define('RSA_ERROR_EID', 1);
define('RSA_PROGRESS_EID', 2);

/*
 * SMIME Properties
 */

define('SMIME_CERTENCODED_PID', 1);
define('SMIME_CERTSTORE_PID', 2);
define('SMIME_CERTSTOREPASSWORD_PID', 3);
define('SMIME_CERTSTORETYPE_PID', 4);
define('SMIME_CERTSUBJECT_PID', 5);
define('SMIME_DETACHEDSIGNATURE_PID', 6);
define('SMIME_ENCRYPTINGALGORITHM_PID', 7);
define('SMIME_INCLUDECERTIFICATE_PID', 8);
define('SMIME_INCLUDECHAIN_PID', 9);
define('SMIME_INTERNALHEADERS_PID', 10);
define('SMIME_MESSAGE_PID', 11);
define('SMIME_MESSAGEENCRYPTED_PID', 12);
define('SMIME_MESSAGEHEADERCOUNT_PID', 13);
define('SMIME_MESSAGEHEADERFIELD_PID', 14);
define('SMIME_MESSAGEHEADERVALUE_PID', 15);
define('SMIME_MESSAGEHEADERSSTRING_PID', 16);
define('SMIME_MESSAGESIGNED_PID', 17);
define('SMIME_RECIPIENTCERTCOUNT_PID', 18);
define('SMIME_RECIPIENTCERTENCODED_PID', 19);
define('SMIME_SIGNERCERTENCODED_PID', 20);
define('SMIME_SIGNERCERTISSUER_PID', 21);
define('SMIME_SIGNERCERTSERIALNUMBER_PID', 22);
define('SMIME_SIGNERCERTSUBJECT_PID', 23);
define('SMIME_SIGNERCERTCHAINCOUNT_PID', 24);
define('SMIME_SIGNERCERTCHAINENCODED_PID', 25);
define('SMIME_SIGNINGALGORITHM_PID', 26);


/*
 * SMIME Enums
 */

define('SMIME_CERTSTORETYPE_USER', 0);
define('SMIME_CERTSTORETYPE_MACHINE', 1);
define('SMIME_CERTSTORETYPE_PFXFILE', 2);
define('SMIME_CERTSTORETYPE_PFXBLOB', 3);
define('SMIME_CERTSTORETYPE_JKSFILE', 4);
define('SMIME_CERTSTORETYPE_JKSBLOB', 5);
define('SMIME_CERTSTORETYPE_PEMKEY_FILE', 6);
define('SMIME_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('SMIME_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('SMIME_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('SMIME_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('SMIME_CERTSTORETYPE_P7BFILE', 11);
define('SMIME_CERTSTORETYPE_P7BBLOB', 12);
define('SMIME_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('SMIME_CERTSTORETYPE_PPKFILE', 14);
define('SMIME_CERTSTORETYPE_PPKBLOB', 15);
define('SMIME_CERTSTORETYPE_XMLFILE', 16);
define('SMIME_CERTSTORETYPE_XMLBLOB', 17);



/*
 * SMIME Methods
 */

define('SMIME_ADDRECIPIENTCERT_MID', 2);
define('SMIME_CONFIG_MID', 3);
define('SMIME_DECRYPT_MID', 4);
define('SMIME_DECRYPTANDVERIFYSIGNATURE_MID', 5);
define('SMIME_DECRYPTFILE_MID', 6);
define('SMIME_ENCRYPT_MID', 7);
define('SMIME_ENCRYPTFILE_MID', 8);
define('SMIME_GETRECIPIENTINFO_MID', 9);
define('SMIME_RESET_MID', 10);
define('SMIME_SIGN_MID', 13);
define('SMIME_SIGNANDENCRYPT_MID', 14);
define('SMIME_VERIFYSIGNATURE_MID', 15);


/*
 * SMIME Events
 */
  
define('SMIME_ERROR_EID', 1);
define('SMIME_RECIPIENTINFO_EID', 2);
define('SMIME_SIGNERCERTINFO_EID', 3);

/*
 * TEA Properties
 */

define('TEA_ALGORITHM_PID', 1);
define('TEA_CIPHERMODE_PID', 2);
define('TEA_INPUTFILE_PID', 3);
define('TEA_INPUTMESSAGE_PID', 4);
define('TEA_IV_PID', 5);
define('TEA_KEY_PID', 6);
define('TEA_KEYPASSWORD_PID', 7);
define('TEA_OUTPUTFILE_PID', 8);
define('TEA_OUTPUTMESSAGE_PID', 9);
define('TEA_OVERWRITE_PID', 10);
define('TEA_PADDINGMODE_PID', 11);
define('TEA_USEHEX_PID', 12);


/*
 * TEA Enums
 */

define('TEA_ALGORITHM_XXTEA', 0);
define('TEA_ALGORITHM_XTEA', 1);
define('TEA_ALGORITHM_TEA', 2);

define('TEA_CIPHERMODE_CBC', 0);
define('TEA_CIPHERMODE_ECB', 1);
define('TEA_CIPHERMODE_OFB', 2);
define('TEA_CIPHERMODE_CFB', 3);
define('TEA_CIPHERMODE_CTS', 4);
define('TEA_CIPHERMODE_8OFB', 5);

define('TEA_PADDINGMODE_PKCS7', 0);
define('TEA_PADDINGMODE_ZEROS', 1);
define('TEA_PADDINGMODE_NONE', 2);
define('TEA_PADDINGMODE_ANSIX923', 3);
define('TEA_PADDINGMODE_ISO10126', 4);



/*
 * TEA Methods
 */

define('TEA_CONFIG_MID', 2);
define('TEA_DECRYPT_MID', 3);
define('TEA_DECRYPTBLOCK_MID', 4);
define('TEA_ENCRYPT_MID', 5);
define('TEA_ENCRYPTBLOCK_MID', 6);
define('TEA_RESET_MID', 7);


/*
 * TEA Events
 */
  
define('TEA_ERROR_EID', 1);
define('TEA_PROGRESS_EID', 2);

/*
 * TripleDES Properties
 */

define('TRIPLEDES_CIPHERMODE_PID', 1);
define('TRIPLEDES_INPUTFILE_PID', 2);
define('TRIPLEDES_INPUTMESSAGE_PID', 3);
define('TRIPLEDES_IV_PID', 4);
define('TRIPLEDES_KEY_PID', 5);
define('TRIPLEDES_KEYPASSWORD_PID', 6);
define('TRIPLEDES_OUTPUTFILE_PID', 7);
define('TRIPLEDES_OUTPUTMESSAGE_PID', 8);
define('TRIPLEDES_OVERWRITE_PID', 9);
define('TRIPLEDES_PADDINGMODE_PID', 10);
define('TRIPLEDES_USEHEX_PID', 11);


/*
 * TripleDES Enums
 */

define('TRIPLEDES_CIPHERMODE_CBC', 0);
define('TRIPLEDES_CIPHERMODE_ECB', 1);
define('TRIPLEDES_CIPHERMODE_OFB', 2);
define('TRIPLEDES_CIPHERMODE_CFB', 3);
define('TRIPLEDES_CIPHERMODE_CTS', 4);
define('TRIPLEDES_CIPHERMODE_8OFB', 5);

define('TRIPLEDES_PADDINGMODE_PKCS7', 0);
define('TRIPLEDES_PADDINGMODE_ZEROS', 1);
define('TRIPLEDES_PADDINGMODE_NONE', 2);
define('TRIPLEDES_PADDINGMODE_ANSIX923', 3);
define('TRIPLEDES_PADDINGMODE_ISO10126', 4);



/*
 * TripleDES Methods
 */

define('TRIPLEDES_CONFIG_MID', 2);
define('TRIPLEDES_DECRYPT_MID', 3);
define('TRIPLEDES_DECRYPTBLOCK_MID', 4);
define('TRIPLEDES_ENCRYPT_MID', 5);
define('TRIPLEDES_ENCRYPTBLOCK_MID', 6);
define('TRIPLEDES_RESET_MID', 7);


/*
 * TripleDES Events
 */
  
define('TRIPLEDES_ERROR_EID', 1);
define('TRIPLEDES_PROGRESS_EID', 2);

/*
 * Twofish Properties
 */

define('TWOFISH_CIPHERMODE_PID', 1);
define('TWOFISH_INPUTFILE_PID', 2);
define('TWOFISH_INPUTMESSAGE_PID', 3);
define('TWOFISH_IV_PID', 4);
define('TWOFISH_KEY_PID', 5);
define('TWOFISH_KEYPASSWORD_PID', 6);
define('TWOFISH_OUTPUTFILE_PID', 7);
define('TWOFISH_OUTPUTMESSAGE_PID', 8);
define('TWOFISH_OVERWRITE_PID', 9);
define('TWOFISH_PADDINGMODE_PID', 10);
define('TWOFISH_USEHEX_PID', 11);


/*
 * Twofish Enums
 */

define('TWOFISH_CIPHERMODE_CBC', 0);
define('TWOFISH_CIPHERMODE_ECB', 1);
define('TWOFISH_CIPHERMODE_OFB', 2);
define('TWOFISH_CIPHERMODE_CFB', 3);
define('TWOFISH_CIPHERMODE_CTS', 4);
define('TWOFISH_CIPHERMODE_8OFB', 5);

define('TWOFISH_PADDINGMODE_PKCS7', 0);
define('TWOFISH_PADDINGMODE_ZEROS', 1);
define('TWOFISH_PADDINGMODE_NONE', 2);
define('TWOFISH_PADDINGMODE_ANSIX923', 3);
define('TWOFISH_PADDINGMODE_ISO10126', 4);



/*
 * Twofish Methods
 */

define('TWOFISH_CONFIG_MID', 2);
define('TWOFISH_DECRYPT_MID', 3);
define('TWOFISH_DECRYPTBLOCK_MID', 4);
define('TWOFISH_ENCRYPT_MID', 5);
define('TWOFISH_ENCRYPTBLOCK_MID', 6);
define('TWOFISH_RESET_MID', 7);


/*
 * Twofish Events
 */
  
define('TWOFISH_ERROR_EID', 1);
define('TWOFISH_PROGRESS_EID', 2);

/*
 * XMLEncrypt Properties
 */

define('XMLENCRYPT_CERTENCODED_PID', 1);
define('XMLENCRYPT_CERTSTORE_PID', 2);
define('XMLENCRYPT_CERTSTOREPASSWORD_PID', 3);
define('XMLENCRYPT_CERTSTORETYPE_PID', 4);
define('XMLENCRYPT_CERTSUBJECT_PID', 5);
define('XMLENCRYPT_ENCRYPTEDDATADETAILCOUNT_PID', 6);
define('XMLENCRYPT_ENCRYPTEDDATADETAILID_PID', 7);
define('XMLENCRYPT_ENCRYPTEDDATADETAILMIMETYPE_PID', 8);
define('XMLENCRYPT_ENCRYPTEDDATADETAILSCOPE_PID', 9);
define('XMLENCRYPT_ENCRYPTEDDATADETAILXMLELEMENT_PID', 10);
define('XMLENCRYPT_ENCRYPTINGALGORITHM_PID', 11);
define('XMLENCRYPT_INPUTFILE_PID', 12);
define('XMLENCRYPT_INPUTXML_PID', 13);
define('XMLENCRYPT_OUTPUTFILE_PID', 14);
define('XMLENCRYPT_OUTPUTXML_PID', 15);
define('XMLENCRYPT_OVERWRITE_PID', 16);
define('XMLENCRYPT_RECIPIENTCERTENCODED_PID', 17);
define('XMLENCRYPT_RECIPIENTCERTSTORE_PID', 18);
define('XMLENCRYPT_RECIPIENTCERTSTOREPASSWORD_PID', 19);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PID', 20);
define('XMLENCRYPT_RECIPIENTCERTSUBJECT_PID', 21);
define('XMLENCRYPT_SYMMETRICKEY_PID', 22);


/*
 * XMLEncrypt Enums
 */

define('XMLENCRYPT_CERTSTORETYPE_USER', 0);
define('XMLENCRYPT_CERTSTORETYPE_MACHINE', 1);
define('XMLENCRYPT_CERTSTORETYPE_PFXFILE', 2);
define('XMLENCRYPT_CERTSTORETYPE_PFXBLOB', 3);
define('XMLENCRYPT_CERTSTORETYPE_JKSFILE', 4);
define('XMLENCRYPT_CERTSTORETYPE_JKSBLOB', 5);
define('XMLENCRYPT_CERTSTORETYPE_PEMKEY_FILE', 6);
define('XMLENCRYPT_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('XMLENCRYPT_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('XMLENCRYPT_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('XMLENCRYPT_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('XMLENCRYPT_CERTSTORETYPE_P7BFILE', 11);
define('XMLENCRYPT_CERTSTORETYPE_P7BBLOB', 12);
define('XMLENCRYPT_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('XMLENCRYPT_CERTSTORETYPE_PPKFILE', 14);
define('XMLENCRYPT_CERTSTORETYPE_PPKBLOB', 15);
define('XMLENCRYPT_CERTSTORETYPE_XMLFILE', 16);
define('XMLENCRYPT_CERTSTORETYPE_XMLBLOB', 17);

define('XMLENCRYPT_ENCRYPTEDDATADETAILSCOPE_ELEMENT', 0);
define('XMLENCRYPT_ENCRYPTEDDATADETAILSCOPE_CONTENT', 1);

define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_USER', 0);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_MACHINE', 1);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PFXFILE', 2);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PFXBLOB', 3);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_JKSFILE', 4);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_JKSBLOB', 5);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PEMKEY_FILE', 6);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PEMKEY_BLOB', 7);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_P7BFILE', 11);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_P7BBLOB', 12);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PPKFILE', 14);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_PPKBLOB', 15);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_XMLFILE', 16);
define('XMLENCRYPT_RECIPIENTCERTSTORETYPE_XMLBLOB', 17);



/*
 * XMLEncrypt Methods
 */

define('XMLENCRYPT_CONFIG_MID', 2);
define('XMLENCRYPT_DECRYPT_MID', 3);
define('XMLENCRYPT_DOEVENTS_MID', 4);
define('XMLENCRYPT_ENCRYPT_MID', 5);
define('XMLENCRYPT_RESET_MID', 6);


/*
 * XMLEncrypt Events
 */
  
define('XMLENCRYPT_ENCRYPTEDDATAINFO_EID', 1);
define('XMLENCRYPT_ERROR_EID', 2);
define('XMLENCRYPT_PROGRESS_EID', 3);
define('XMLENCRYPT_STATUS_EID', 4);

/*
 * XMLSig Properties
 */

define('XMLSIG_CANONICALIZATIONMETHOD_PID', 1);
define('XMLSIG_CERTENCODED_PID', 2);
define('XMLSIG_CERTSTORE_PID', 3);
define('XMLSIG_CERTSTOREPASSWORD_PID', 4);
define('XMLSIG_CERTSTORETYPE_PID', 5);
define('XMLSIG_CERTSUBJECT_PID', 6);
define('XMLSIG_HMACKEY_PID', 7);
define('XMLSIG_INPUTFILE_PID', 8);
define('XMLSIG_INPUTXML_PID', 9);
define('XMLSIG_OUTPUTFILE_PID', 10);
define('XMLSIG_OUTPUTXML_PID', 11);
define('XMLSIG_OVERWRITE_PID', 12);
define('XMLSIG_REFERENCECOUNT_PID', 13);
define('XMLSIG_REFERENCEHASHALGORITHM_PID', 14);
define('XMLSIG_REFERENCEHASHVALUE_PID', 15);
define('XMLSIG_REFERENCETRANSFORMALGORITHMS_PID', 16);
define('XMLSIG_REFERENCEURI_PID', 17);
define('XMLSIG_REFERENCEXMLELEMENT_PID', 18);
define('XMLSIG_SIGNATUREXPATH_PID', 19);
define('XMLSIG_SIGNERCERTENCODED_PID', 20);
define('XMLSIG_SIGNERCERTSTORE_PID', 21);
define('XMLSIG_SIGNERCERTSTOREPASSWORD_PID', 22);
define('XMLSIG_SIGNERCERTSTORETYPE_PID', 23);
define('XMLSIG_SIGNERCERTSUBJECT_PID', 24);
define('XMLSIG_SIGNINGALGORITHM_PID', 25);


/*
 * XMLSig Enums
 */

define('XMLSIG_CANONICALIZATIONMETHOD_C14N', 0);
define('XMLSIG_CANONICALIZATIONMETHOD_C14NCOMMENTS', 1);
define('XMLSIG_CANONICALIZATIONMETHOD_C14N11', 2);
define('XMLSIG_CANONICALIZATIONMETHOD_C14N11COMMENTS', 3);
define('XMLSIG_CANONICALIZATIONMETHOD_EXC_C14N', 4);
define('XMLSIG_CANONICALIZATIONMETHOD_EXC_C14NCOMMENTS', 5);

define('XMLSIG_CERTSTORETYPE_USER', 0);
define('XMLSIG_CERTSTORETYPE_MACHINE', 1);
define('XMLSIG_CERTSTORETYPE_PFXFILE', 2);
define('XMLSIG_CERTSTORETYPE_PFXBLOB', 3);
define('XMLSIG_CERTSTORETYPE_JKSFILE', 4);
define('XMLSIG_CERTSTORETYPE_JKSBLOB', 5);
define('XMLSIG_CERTSTORETYPE_PEMKEY_FILE', 6);
define('XMLSIG_CERTSTORETYPE_PEMKEY_BLOB', 7);
define('XMLSIG_CERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('XMLSIG_CERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('XMLSIG_CERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('XMLSIG_CERTSTORETYPE_P7BFILE', 11);
define('XMLSIG_CERTSTORETYPE_P7BBLOB', 12);
define('XMLSIG_CERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('XMLSIG_CERTSTORETYPE_PPKFILE', 14);
define('XMLSIG_CERTSTORETYPE_PPKBLOB', 15);
define('XMLSIG_CERTSTORETYPE_XMLFILE', 16);
define('XMLSIG_CERTSTORETYPE_XMLBLOB', 17);

define('XMLSIG_SIGNERCERTSTORETYPE_USER', 0);
define('XMLSIG_SIGNERCERTSTORETYPE_MACHINE', 1);
define('XMLSIG_SIGNERCERTSTORETYPE_PFXFILE', 2);
define('XMLSIG_SIGNERCERTSTORETYPE_PFXBLOB', 3);
define('XMLSIG_SIGNERCERTSTORETYPE_JKSFILE', 4);
define('XMLSIG_SIGNERCERTSTORETYPE_JKSBLOB', 5);
define('XMLSIG_SIGNERCERTSTORETYPE_PEMKEY_FILE', 6);
define('XMLSIG_SIGNERCERTSTORETYPE_PEMKEY_BLOB', 7);
define('XMLSIG_SIGNERCERTSTORETYPE_PUBLIC_KEY_FILE', 8);
define('XMLSIG_SIGNERCERTSTORETYPE_PUBLIC_KEY_BLOB', 9);
define('XMLSIG_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_BLOB', 10);
define('XMLSIG_SIGNERCERTSTORETYPE_P7BFILE', 11);
define('XMLSIG_SIGNERCERTSTORETYPE_P7BBLOB', 12);
define('XMLSIG_SIGNERCERTSTORETYPE_SSHPUBLIC_KEY_FILE', 13);
define('XMLSIG_SIGNERCERTSTORETYPE_PPKFILE', 14);
define('XMLSIG_SIGNERCERTSTORETYPE_PPKBLOB', 15);
define('XMLSIG_SIGNERCERTSTORETYPE_XMLFILE', 16);
define('XMLSIG_SIGNERCERTSTORETYPE_XMLBLOB', 17);



/*
 * XMLSig Methods
 */

define('XMLSIG_CONFIG_MID', 2);
define('XMLSIG_DOEVENTS_MID', 3);
define('XMLSIG_RESET_MID', 4);
define('XMLSIG_SIGN_MID', 7);
define('XMLSIG_VERIFYSIGNATURE_MID', 8);


/*
 * XMLSig Events
 */
  
define('XMLSIG_ERROR_EID', 1);
define('XMLSIG_PROGRESS_EID', 2);
define('XMLSIG_SIGNATUREINFO_EID', 3);
define('XMLSIG_STATUS_EID', 4);



?>
